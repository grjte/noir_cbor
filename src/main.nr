mod cbor_error;
mod cbor_encoder;
mod cbor_decoder;
use cbor_decoder::CborDecoder;

// nint = "-4294967297"
// uint = "18446744073709551615"
//
// cost:
// {
//     "acir_opcodes": 1198,
//     "circuit_size": 7530,
//     "gates_per_opcode": [3,4,0,1,3,2,0,3,1,1,0,1,3,1,0,1,4,1,1,0,3,89,1,1,1,1,1,1,0,3,1,1,0,1,3,1,1,0,686,345,1,2,1,1,1,1,0,3,1,1,0,15,6,1,1,1,1,1,0,3,2,1,0,3,1,1,1,1,1,1,0,3,1,1,1,1,0,1,6,1,4,1,1,1,1,0,5,3,1,3,1,1,1,0,3,1,1,0,174,1369,1,2,1,1,1,0,3,2,1,0,6,10,1,1,1,1,1,0,3,1,1,0,3,1,1,1,1,1,1,0,3,1,1,0,4,1,1,2,1,1,1,0,3,1,1,0,3,2,1,1,1,1,1,0,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,3,1,1,2847,1,43,1,46,1,43,1,46,1,43,1,46,1,0,1,4,1,0,1,3,1,0,1,4,1,1,0,3,1,1,0,1,3,1,1,0,1,3,1,1,0,3,1,1,2,1,1,1,1,0,3,2,1,0,1,3,1,1,0,1,2,1,2,1,1,1,1,0,3,1,1,0,2,3,1,1,1,1,1,0,3,1,1,0,3,1,1,1,1,1,1,0,3,2,1,1,1,0,1,3,1,3,1,1,1,1,0,1,3,1,3,1,1,1,0,3,1,1,0,2,1,1,2,1,1,1,0,3,1,1,0,2,2,1,1,1,1,1,0,3,2,1,0,2,1,1,1,1,1,1,0,3,1,1,0,3,1,1,2,1,1,1,0,3,1,1,0,3,1,1,2,1,1,1,0,3,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,0,1,3,1,0,1,4,1,0,1,3,1,1,1,1,1,1,0,1,3,1,0,3,1,1,1,38,0,1,4,1,1,0,1,3,1,1,0,3,1,1,1,1,1,1,1,0,3,1,1,0,1,3,1,1,0,1,2,1,2,1,1,1,1,0,3,2,1,0,2,3,1,1,1,1,1,0,3,1,1,0,3,1,1,2,1,1,1,0,3,1,1,1,1,0,1,3,1,3,1,1,1,1,0,1,3,1,4,1,1,1,0,3,2,1,0,1,2,1,2,1,1,1,0,3,1,1,0,1,3,1,1,1,1,1,0,3,1,1,0,3,1,1,1,1,1,1,0,3,1,1,0,4,1,1,2,1,1,1,0,3,2,1,0,3,1,1,1,1,1,1,0,3,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,3,1,1,45,1,44,1,45,1,44,1,45,1,44,1,45,0,1,4,1,0,1,3,1,0,1,3,1,1,0]
// }
fn main(uint: u64, nint: i64) {
    // encode/decode unsigned integer
    let mut buf = [0; 9];
    uint.cbor_encode(&mut buf);
    assert(buf[0] == 0x1b);

    let decoded: u64 = CborDecoder::cbor_decode(buf);
    assert(decoded == uint);

    // encode/decode negative integer
    let mut buf = [0; 9];
    nint.cbor_encode(&mut buf);
    assert(buf[0] == 0x3b);

    let decoded: i64 = CborDecoder::cbor_decode(buf);
    assert(decoded == nint);
}
